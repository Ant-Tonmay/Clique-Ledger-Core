# version: '3.8'

services:
  
  mysql:
    image: mysql:latest
    restart: always
    container_name: clique_ledger_mysql_1
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: clique_ledger
    ports:
      - "3406:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  zookeeper:
    image: wurstmeister/zookeeper:latest
    restart: always
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "yourtopic:1:1"
    networks:
      - kafka-network
    depends_on:
      - zookeeper

  nodejs:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    # volumes:
    #  - ./prisma/migrations:/prisma/migrations
    depends_on:
      - mysql
      - kafka
    develop:
      watch:
        - action: sync
          path: ./server/src
          target: server/src/
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

networks:
  kafka-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
